
sum.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:

int soc_des, soc_cli, soc_rc, soc_len, server_pid, cli_pid;
struct sockaddr_in serv_addr;
struct sockaddr_in client_addr;

int main(int argc, char *argv[]) {
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	89 7d ec             	mov    %edi,-0x14(%rbp)
   b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	int w = V;
   f:	c7 45 f0 2a 00 00 00 	movl   $0x2a,-0x10(%rbp)
	int x = 2021;
  16:	c7 45 f4 e5 07 00 00 	movl   $0x7e5,-0xc(%rbp)
	int y = 14;
  1d:	c7 45 f8 0e 00 00 00 	movl   $0xe,-0x8(%rbp)
	int z = w + x + y;
  24:	8b 55 f0             	mov    -0x10(%rbp),%edx
  27:	8b 45 f4             	mov    -0xc(%rbp),%eax
  2a:	01 c2                	add    %eax,%edx
  2c:	8b 45 f8             	mov    -0x8(%rbp),%eax
  2f:	01 d0                	add    %edx,%eax
  31:	89 45 fc             	mov    %eax,-0x4(%rbp)
	printf("The answer is %d\n", z);
  34:	8b 45 fc             	mov    -0x4(%rbp),%eax
  37:	89 c6                	mov    %eax,%esi
  39:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 40 <main+0x40>
  40:	b8 00 00 00 00       	mov    $0x0,%eax
  45:	e8 00 00 00 00       	callq  4a <main+0x4a>
	return 0;
  4a:	b8 00 00 00 00       	mov    $0x0,%eax
}
  4f:	c9                   	leaveq 
  50:	c3                   	retq   
